# Portainer Stack: Aslan Drive Infrastructure
# Deploy this stack first for always-running services
#
# Stack Name: aslan-infrastructure
# Description: PostgreSQL database and MD Provider API

version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: aslan_postgres
    environment:
      POSTGRES_DB: aslan_drive
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d aslan_drive"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - aslan_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    labels:
      - "aslan.service=database"
      - "aslan.tier=infrastructure"

  md_provider:
    image: ${DOCKER_REGISTRY:-ghcr.io/jsam0418/aslan_drive/md-provider}:${IMAGE_TAG:-latest}
    container_name: aslan_md_provider
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://trader:${POSTGRES_PASSWORD}@postgres:5432/aslan_drive
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${MD_PROVIDER_PORT:-8000}:8000"
    networks:
      - aslan_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "aslan.service=md-provider"
      - "aslan.tier=api"

volumes:
  postgres_data:
    name: aslan_postgres_data

networks:
  aslan_network:
    name: aslan_network
    driver: bridge